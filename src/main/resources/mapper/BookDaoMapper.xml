<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.Dao.BookDaoMapper">
    <select id="findAllUserBookInfo"  resultType="Book">
        SELECT st.stu_account,st.stu_name,st.stu_class from  book bk left JOIN student st on
        bk.stu_account=st.stu_account
    </select>
    <select id="getAllBookUserRecords" resultType="int">
        select count(*) from book
    </select>
    <select id="findAllUserBookInfobyaccount" parameterType="String" resultType="Book">
         SELECT * FROM book bk LEFT JOIN borrow_bookinfo brk ON bk.book_uid=brk.book_uid where bk.stu_account=#{st_account}
    </select>
    <select id="getStudentInfo" parameterType="String" resultType="Book">
        SELECT * from book where stu_account=#{stu_account}
    </select>
    <insert id="SaveStuBook_Info">
        insert into book(stu_account,book_uid) values(#{stu_account},#{book_uid})
    </insert>
    <insert id="saveBorrow_bookInfo" parameterType="Book">
        insert into borrow_bookinfo(book_uid,book_name,book_out_time,book_int_time,book_state,book_image,book_type)
        values(#{book_uid},#{book_name},#{book_out_time},#{book_int_time},#{book_state},#{book_image},#{book_type})
    </insert>
    <select id="getStuBorrow_bookInfo" parameterType="String" resultType="Book">
        SELECT * from book bk LEFT JOIN borrow_bookinfo brk ON bk.book_uid=brk.book_uid where
        bk.stu_account=#{stu_account}
    </select>
    <select id="getStuBorrow_bookInfoRecords" parameterType="String" resultType="int">
        SELECT count(*) from book bk LEFT JOIN borrow_bookinfo brk ON bk.book_uid=brk.book_uid where
        bk.stu_account=#{stu_account}
    </select>
    <update id="Savebook_back">
        update  borrow_bookinfo set book_state=1  where book_uid=#{book_uid} and book_name=#{book_name}
    </update>
    <delete id="delete_book_borrowRecord" parameterType="String">
        delete  from borrow_bookinfo  where book_uid=#{book_uid}
    </delete>
    <delete id="deleteStu_bookInfo" parameterType="String">
        delete from book where stu_account=#{stu_account}
    </delete>
    <update id="book_renewal">
        update borrow_bookinfo set book_int_time=#{book_int_time} where book_uid=#{book_uid} and book_name=#{book_name}
    </update>
    <select id="getStuBookComment_Count" parameterType="String" resultType="int">
        select count(*) from book_commentary where stu_account=#{studentNumber} and book_name=#{book_name} and stu_score is not null
    </select>
    <select id="getBookScore" parameterType="String" resultType="double">
        SELECT AVG(stu_score) FROM book_commentary where book_name=#{book_name}
    </select>
    <select id="getBookComments" parameterType="String" resultType="bookCommentary">
        SELECT stu_account,stu_comment,stu_score FROM book_commentary where book_name=#{book_name}
    </select>
    <insert id="setStu_source">
        insert into book_commentary(book_name,stu_account,stu_score) values(#{book_name},#{studentNumber},#{stu_score})
    </insert>
</mapper>